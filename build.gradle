config {
    info {
        description = 'Redis Enterprise Admin'
        inceptionYear = '2021'
        vendor = 'Redis'
        tags = ['redis', 'enterprise', 'admin']

        links {
            website      = "https://github.com/redis-field-engineering/${project.rootProject.name}"
            issueTracker = "https://github.com/redis-field-engineering/${project.rootProject.name}/issues"
            scm          = "https://github.com/redis-field-engineering/${project.rootProject.name}.git"
        }

        scm {
            url                 = "https://github.com/redis-field-engineering/${project.rootProject.name}"
            connection          = "scm:git:https://github.com/redis-field-engineering/${project.rootProject.name}.git"
            developerConnection = "scm:git:git@github.com:redis-field-engineering/${project.rootProject.name}.git"
        }

        specification {
            enabled = true
        }

        implementation {
            enabled = true
        }
        
        people {
            clearDomainSet()
            person {
                id    = 'jruaux'
                name  = 'Julien Ruaux'
                roles = ['developer', 'author']
            }
        }
    }

    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
        }
    }
    
    licensing {
        enabled = false
    }

    coverage {
        jacoco {
            enabled = true
            toolVersion = jacocoPluginVersion
        }
    }
}

allprojects {
    repositories {
        mavenLocal()
        gradlePluginPortal()
    }

    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

subprojects {
    config {
        info {
            description = project.project_description
        }
        coverage {
            jacoco {
		        toolVersion = jacocoPluginVersion
            }
        }
    }
    
    license {
        exclude('build/**')
    }

    test {
        useJUnitPlatform()
    }
}